<mahApps:MetroWindow
    x:Class="AndroidMove.Views.FilesWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mahApps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:dlg="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:v="clr-namespace:AndroidMove.Views"
    xmlns:vm="clr-namespace:AndroidMove.ViewModels"
    dlg:DialogParticipation.Register="{Binding}"
    Background="{DynamicResource MaterialDesignPaper}"
    BorderThickness="1"
    FontFamily="pack:application,,,/MaterialDesignThemes.Wpf;conponent/Resources/Roboto/#Roboto"
    GlowBrush="{DynamicResource AccentColorBrush}"
    TextElement.FontSize="16"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    Width="600"
    TextOptions.TextRenderingMode="Auto"
    >

    <b:Interaction.Triggers>
        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->
        <b:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </b:EventTrigger>
        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <b:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </b:EventTrigger>
        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->
    </b:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Text="{Binding Device.Name}"/>
        <TextBlock Grid.Row="1" Text="{Binding Device.TargetDirectory}"/>
        <ListView Grid.Row="2" ItemsSource="{Binding Files}" ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="名前" DisplayMemberBinding="{Binding FileName}"/>
                    <GridViewColumn Header="権限" DisplayMemberBinding="{Binding PermissionText}"/>
                    <GridViewColumn Header="作成日時" DisplayMemberBinding="{Binding Created, StringFormat='yyyy/MM/dd HH:mm'}"/>
                    <GridViewColumn Header="移動">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Button Command="{Binding DataContext.SendFileCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=v:FilesWindow}}" CommandParameter="{Binding}">
                                    <wpf:PackIcon Kind="FileSend"/>
                                </Button>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</mahApps:MetroWindow>
